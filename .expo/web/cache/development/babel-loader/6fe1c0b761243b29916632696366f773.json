{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport * as Contacts from 'expo-contacts';\nimport { useState, useEffect } from 'react';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Contactos() {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      contactos = _useState4[0],\n      setContactos = _useState4[1];\n\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Contacts$reque = yield Contacts.requestPermissionsAsync(),\n          status = _yield$Contacts$reque.status;\n\n      if (status === 'granted') {\n        var _yield$Contacts$getCo = yield Contacts.getContactsAsync({\n          fields: [Contacts.Fields.FirstName, Contacts.Fields.LastName, Contacts.Fields.PhoneNumbers]\n        }),\n            data = _yield$Contacts$getCo.data;\n\n        if (data.length > 0) {\n          console.log(data);\n          setContactos(data);\n        } else {\n          setError(\"No se han encontrado contactos\");\n        }\n      } else {\n        setError(\"Permiso denegado\");\n      }\n    })();\n  }, []);\n\n  var getNumero = function getNumero() {\n    if (contactos.phoneNumbers) {\n      return contactos.phoneNumbers.map(function (phoneNumber, index) {\n        _jsx(View, {\n          children: _jsxs(Text, {\n            children: [phoneNumber.label, \": \", phoneNumber.number]\n          })\n        }, index);\n      });\n    }\n  };\n\n  var getContactos = function getContactos() {\n    if (contactos !== undefined) {\n      return _jsx(View, {\n        children: _jsx(FlatList, {\n          data: contactos,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsxs(Text, {\n              children: [\"Nombre: \", item.firstName, \" \", item.lastName, \" // Numero: \", item.phoneNumbers && item.phoneNumbers[0] && item.phoneNumbers[0].number, \" \"]\n            });\n          }\n        })\n      });\n    } else {\n      return _jsx(Text, {\n        children: \"Esperando contactos...\"\n      });\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Lista Contactos:\"\n    }), getContactos(), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","Contacts","useState","useEffect","Contactos","undefined","error","setError","contactos","setContactos","requestPermissionsAsync","status","getContactsAsync","fields","Fields","FirstName","LastName","PhoneNumbers","data","length","console","log","getNumero","phoneNumbers","map","phoneNumber","index","label","number","getContactos","item","id","firstName","lastName","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/devandroid.ALMAGRO/Desktop/TP2_DAI_REACT_NATIVE/src/screens/Contactos.jsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, FlatList, ScrollView } from 'react-native';\r\nimport * as Contacts from 'expo-contacts';\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport default function Contactos() {\r\n  let [error, setError] = useState(undefined);\r\n  const [contactos, setContactos] = useState(undefined);\r\n\r\n  useEffect(()=>{\r\n    (async () => {\r\n      const {status}= await Contacts.requestPermissionsAsync();\r\n\r\n      if(status === 'granted') {\r\n        const {data}= await Contacts.getContactsAsync({\r\n          fields: [Contacts.Fields.FirstName, Contacts.Fields.LastName, Contacts.Fields.PhoneNumbers]\r\n        });\r\n\r\n        if(data.length > 0){\r\n          console.log(data);\r\n          setContactos(data);\r\n        }\r\n        else{\r\n          setError(\"No se han encontrado contactos\")\r\n        }\r\n      }\r\n      else {\r\n        setError(\"Permiso denegado\");\r\n      }\r\n    })\r\n  ()\r\n  }, [])\r\n\r\n  let getNumero = () => {\r\n    if (contactos.phoneNumbers) {\r\n      return contactos.phoneNumbers.map((phoneNumber, index) => {\r\n        <View key={index}>\r\n          <Text>{phoneNumber.label}: {phoneNumber.number}</Text>\r\n        </View>\r\n      })\r\n    }\r\n  }\r\n\r\n  let getContactos = () => {\r\n    if(contactos !== undefined){\r\n        return (\r\n          <View>\r\n              <FlatList data={contactos}\r\n              keyExtractor={ (item) => item.id}\r\n              renderItem = {({item}) => ( \r\n              <Text>Nombre: {item.firstName} {item.lastName} // Numero: {item.phoneNumbers && item.phoneNumbers[0] && item.phoneNumbers[0].number} </Text>\r\n          )}\r\n        />\r\n          </View>\r\n      );\r\n    }\r\n    else{\r\n      return <Text>Esperando contactos...</Text>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Lista Contactos:</Text>\r\n      {getContactos()}\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}